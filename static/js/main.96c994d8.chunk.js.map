{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","no","split","console","log","msg","msg2","withoutspaces","Array","from","i","forEach","element","length","style","color","heading","value","onChange","event","target","rows","backgroundColor","nwetext","toUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","join","alert","role","word","lower","toLowerCase","charAt","slice","capitalize","defaultProps","about","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96c994d8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { a } from \"react-router-dom\";\n\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current = \"page\"  href=\"/\">\n                Home\n              </a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <a className=\"nav-a\" href=\"/about\">\n                {props.about}\n              </a>\n            </li> */}\n\n            <li className=\"nav-item\"></li>\n          </ul>\n          {/* <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input\n              class=\"form-check-input\"\n              onClick = {props.toggleMode}\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            {props.mode === 'light'?'Enable Dark Mode':'Disable Dark Mode'}\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\nNavbar.propTypes = {\n  title: PropTypes.string,\n  about: PropTypes.string,\n};\nNavbar.defaultProps = {\n  title: \"set title here\",\n  about: \"About\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  const handleUpClick = () => {\n    //   console.log(\"Upper case was clicked\");\n    let nwetext = text.toUpperCase();\n    setText(nwetext);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n  const handleLowClick = () => {\n    //   console.log(\"Upper case was clicked\");\n    let nwetext = text.toLocaleLowerCase();\n    setText(nwetext);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n  const handleClearClick = () => {\n    let nwetext = \"\";\n    setText(nwetext);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  };\n  const handleCopyText = () => {\n    var text = document.getElementById(\"mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to clipboard!\", \"success\");\n  };\n  const handleExtraSpaces = () => {\n    let nwetext = text.split(/[ ]+/);\n    setText(nwetext.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n  };\n  const handleOnchange = (event) => {\n    //   console.log(\"On change\");\n    setText(event.target.value);\n  };\n  let no = text.split(\" \");\n  console.log(no);\n  let withoutspaces = Array.from(text);\n  // console.log(withoutspaces);\n  let i = 0;\n  withoutspaces.forEach((element) => {\n    if (element !== \" \") {\n      i = i + 1;\n    }\n  });\n  // console.log(i)\n  let msg;\n  let msg2;\n  // eslint-disable-next-line\n  if (no == \"\") {\n    msg = <p> 0 Minutes read</p>;\n  } else {\n    msg = <p>{0.008 * text.split(\" \").length} Minutes read</p>;\n  }\n  // eslint-disable-next-line\n  if (no == \"\") {\n    msg2 = <p>0 wor ds and 0 characters</p>;\n  } else {\n    msg2 = (\n      <p>\n        {text.split(\" \").length} words and {text.length} characters with space\n      </p>\n    );\n  }\n  // text = \"new text\" wrong way to update text\n  // setText(\"new TExt\"); Correct way to update text\n  return (\n    <>\n      <div className = \"container\" style = {{color:props.mode==='dark'?'white':'black'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnchange}\n            id=\"mybox\"\n            rows=\"8\"\n            style = {{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode ==='dark'?'white':'black'}}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\n          Convert to uppercase\n        </button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\n          Convert to Lowercase\n        </button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\n          Clear Text\n        </button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyText}>\n          Copy\n        </button>\n        <button\n          className=\"btn btn-primary mx-2 my-2\"\n          onClick={handleExtraSpaces}\n        >\n          Remove Extra Spaces\n        </button>\n      </div>\n      <div className=\"container my-3\" style = {{color:props.mode==='dark'?'white':'black'}}>\n        <h2>Your text summary</h2>\n        <p>{msg2}</p>\n        {/* <p>{0.008 * text.split(\" \").length} Minutes read</p> */}\n        <p>{msg}</p>\n        <p>{i} characters without space</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:'Enter something in text box to preview'}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n      </div>\n    )\n  );\n}\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  // eslint-disable-next-line\n  const [mode, setmode] = useState(\"light\"); //Whether dark mode is enabled or not;\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#081424\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode has been disabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TeXtUtils\"\n          about=\"about\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About /> */}\n            {/* </Route> */}\n            {/* <Route ecxact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the Text to analyze\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}